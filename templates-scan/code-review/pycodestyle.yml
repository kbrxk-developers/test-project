---
pycodestyle:
  extends: .common-code-review
  interruptible: true
  stage: code-review
  image:
    name: cytopia/pycodestyle:latest
    entrypoint: ["/bin/sh", "-c"]
  needs:
    - job: validate
      optional: true
    - job: init-deploy
      optional: true
  allow_failure:
    exit_codes: 127
  script:
    - !reference [.code-review, before_script]
    - |
      # Ejecutando pycodestyle
      PYCODESTYLE_REPORT_PATH="${SONAR_USER_HOME}/pycodestyle_report.json"
      echo -e "${GREEN}$ pycodestyle .${NORMAL}"
      if pycodestyle --max-line-length=120 .; then
        echo -e "${GREEN}No se detectaron problemas${NORMAL}"
      else
        apk add --no-cache jq > /dev/null 2>&1
        mkdir -p ${SONAR_USER_HOME}
        echo -e "{\"issues\": ["$(pycodestyle . --max-line-length=120 --format '{
                    "engineId": "pycodestyle",
                    "ruleId": "%(code)s",
                    "type": "CODE_SMELL",
                    "severity": "MINOR",
                    "effortMinutes": 0,
                    "primaryLocation": {
                          "message": "%(text)s",
                          "filePath": "%(path)s",
                          "textRange": {
                                "startLine": %(row)d}}},') |
                sed -e 's|,$|]}|g' -e 's|\./||g' -e 's|\\|\\\\|g' | jq > ${PYCODESTYLE_REPORT_PATH} || :
        echo -e "${RED}Se detectaron problemas${NORMAL}"
        echo "PYCODESTYLE_REPORT_PATH=${PYCODESTYLE_REPORT_PATH}" | tee reports.env
        exit 127
      fi
  artifacts:
    paths:
      - ${SONAR_USER_HOME}
    when: on_failure
  rules:
    - if: >
        $REPOSITORY_LANGUAGE =~ /(python)/ &&
        $CI_PIPELINE_TRIGGERED != "true" &&
        $IS_DYNAMIC_JOB != "true"
      when: always
    - exists:
        - '**/*.py'
      when: always
